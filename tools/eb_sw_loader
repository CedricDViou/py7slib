#!   /usr/bin/env   python
# -*- coding: utf-8 -*
'''
Tool to update the Software in the LM32 soft-processor etherbone/serial communication

@file
@date Created on Jun 16, 2015
@author Benoit Rat (benoit<AT>sevensols.com)
@author Husein Gomiz (hgomiz<AT>sevensols.com)
@copyright LGPL v2.1
@see http://www.ohwr.org
@see http://www.sevensols.com
'''

import sys
import traceback
import os
import re
import subprocess
from optparse import OptionParser


sys.path.append('../../')

from pts_core.bridges.ethbone import *
#from pts_core.bridges.wb_uart import *
from pts_core.main.ptsexcept import *
from pts_core.main.ptslogger import PTSLogger
from pts_core.main.tools import KeyInput
from pts_core.periph.ipc_spiflash import *


def main():

    use = "Usage: %prog [--bus=uart --lun=0 --debug -file=mcsfile] "
    parser = OptionParser(usage=use, version="spiflash update v1.0")

    parser.add_option("-l", "--lun", help="Logical unit Number (SerialPort / IP)", dest="lun")
    parser.add_option("-b", "--bus", help="Bus UART/EB", dest="bus_type", default="EB")
    parser.add_option("-d", "--debug", help="Debug Option", dest="debug", default=False, action="store_true")
    parser.add_option("-m", "--mode", help="Operation mode: cido: Check ID Only, vo: Verify Only, update: update flash image ", dest="mode", default="cido")
    parser.add_option("-f", "--file", help="RAM file", dest="file")

    options, args = parser.parse_args()

    ## Opening Bus connection
    try:
        if options.bus_type.lower() == "eb":
            bus = EthBone(options.lun,options.debug)
        #else: ##options.bus_type == "UART"
           # bus = wb_UART()
            #bus.open(options.lun)
    except BusException, e:
        print "Fatal:BUS Exception: %s" % (e)


    ##Check SDB (TO BE DONE!)

    ##Check Endpoint Register
    bus.test_rw()

    ##Check block read/write using MiniNIC RAM.
    #bus.test_rwblock(0x40008)


    #bus.flash_update(options.mode,options.mcsfile,options.debug,0x40000)

    #bus.fwLoad(options.mcsfile,0x0)


    ##Open File


    ## Loop on 256 packets

    flash=SpiFlash(bus,0x40000,options.debug)
    flash.eb_sw_loader(options.file)



def EB_upload(f):

    print "Just a test"




if __name__ == '__main__':
    main()